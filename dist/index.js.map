{
  "version": 3,
  "sources": ["../lib/validate.js", "../lib/opts.js", "../lib/connections_store.js", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isBuffer = require( '@stdlib/assert-is-buffer' );\nvar isBoolean = require( '@stdlib/assert-is-boolean' ).isPrimitive;\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar isObject = require( '@stdlib/assert-is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {(Buffer|string)} [options.html] - HTML content to serve\n* @param {(Buffer|string)} [options.javascript] - JavaScript script to serve\n* @param {boolean} [options.open] - indicates whether to launch a web browser\n* @returns {(Error|null)} error or null\n*\n* @example\n* var options = {\n*     'port': 7331,\n*     'address': '127.0.0.1',\n*     'open': false\n* };\n* var opts = {};\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'html' ) ) {\n\t\topts.html = options.html;\n\t\tif ( !isBuffer( opts.html ) && !isString( opts.html ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be either a Buffer or a string. Option: `%s`.', 'html', opts.html ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'javascript' ) ) {\n\t\topts.javascript = options.javascript;\n\t\tif ( !isBuffer( opts.javascript ) && !isString( opts.javascript ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be either a Buffer or a string. Option: `%s`.', 'javascript', opts.javascript ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'open' ) ) {\n\t\topts.open = options.open;\n\t\tif ( !isBoolean( opts.open ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'open', opts.open ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\n\n\n// MAIN //\n\n/**\n* Extracts HTTP server options from input function options.\n*\n* @private\n* @param {Options} options - function options\n* @param {NonNegativeInteger} [options.port] - server port\n* @param {NonNegativeInteger} [options.maxport] - max server port\n* @param {string} [options.hostname] - server hostname\n* @param {string} [options.address] - server address\n* @returns {Options} server options\n*\n* @example\n* var options = {\n*     'html': '<h1>beep</h1>',\n*     'open': true,\n*     'port': 7331,\n*     'address': '127.0.0.1'\n* };\n* var out = opts( options );\n* // returns {'port': 7331, 'address': '127.0.0.1'}\n*/\nfunction opts( options ) {\n\tvar out = {};\n\tif ( hasOwnProp( options, 'port' ) ) {\n\t\tout.port = options.port;\n\t}\n\tif ( hasOwnProp( options, 'maxport' ) ) {\n\t\tout.maxport = options.maxport;\n\t}\n\tif ( hasOwnProp( options, 'hostname' ) ) {\n\t\tout.hostname = options.hostname;\n\t}\n\tif ( hasOwnProp( options, 'address' ) ) {\n\t\tout.address = options.address;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = opts;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns a new connections store.\n*\n* @private\n* @returns {Object} store\n*/\nfunction create() {\n\treturn {};\n}\n\n\n// EXPORTS //\n\nmodule.exports = create;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar logger = require( 'debug' );\nvar objectKeys = require( '@stdlib/utils-keys' );\nvar createServer = require( '@stdlib/net-http-server' );\nvar readFileSync = require( '@stdlib/fs-read-file' ).sync;\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar isFunction = require( '@stdlib/assert-is-function' );\nvar openURL = require( '@stdlib/utils-open-url' );\nvar noop = require( '@stdlib/utils-noop' );\nvar buffer2bytelength = require( '@stdlib/buffer-ctor' ).byteLength;\nvar string2buffer = require( '@stdlib/buffer-from-string' );\nvar nextTick = require( '@stdlib/utils-next-tick' );\nvar NODE_VERSION = require( '@stdlib/process-node-version' );\nvar format = require( '@stdlib/string-format' );\nvar validate = require( './validate.js' );\nvar serverOpts = require( './opts.js' );\nvar createStore = require( './connections_store.js' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'disposable-http-server' );\nvar SUPPORTS_BUFFER = ( parseInt( NODE_VERSION.split( '.' )[ 0 ], 10 ) < 6 );\n\n\n// FUNCTIONS //\n\n/**\n* Sends a 404 response.\n*\n* @private\n* @param {IncomingMessage} request - HTTP request object\n* @param {ServerResponse} response - HTTP response object\n*/\nfunction notFound( request, response ) {\n\tdebug( 'Sending 404 response...' );\n\tresponse.statusCode = 404;\n\tresponse.end();\n}\n\n/**\n* Sends a 503 response.\n*\n* @private\n* @param {IncomingMessage} request - HTTP request object\n* @param {ServerResponse} response - HTTP response object\n*/\nfunction unavailable( request, response ) {\n\tdebug( 'Sending 503 response...' );\n\tresponse.statusCode = 503;\n\tresponse.end();\n}\n\n/**\n* Callback invoked once a server closes.\n*\n* @private\n*/\nfunction onClose() {\n\tdebug( 'Server closed.' );\n}\n\n/**\n* Returns the byte length of an encoded string.\n*\n* @private\n* @param {(string|Buffer)} str - input string\n* @returns {NonNegativeInteger} byte length\n*/\nfunction byteLength( str ) { // TODO: consider making a robust utility in `@stdlib/buffer/byte-length`\n\tif ( SUPPORTS_BUFFER ) {\n\t\treturn buffer2bytelength( str );\n\t}\n\t// Earlier versions of Node.js do not support Buffers, ArrayBuffers, TypedArrays, DataViews, or SharedArrayBuffers, so we need to explicitly call `#.toString()`...\n\treturn buffer2bytelength( str.toString() );\n}\n\n\n// MAIN //\n\n/**\n* Creates a disposable HTTP server.\n*\n* @param {Options} options - server options\n* @param {(Buffer|string)} [options.html] - HTML content to serve\n* @param {(Buffer|string)} [options.javascript] - JavaScript to serve\n* @param {NonNegativeInteger} [options.port=0] - server port\n* @param {NonNegativeInteger} [options.maxport] - max server port\n* @param {string} [options.hostname] - server hostname\n* @param {string} [options.address=\"0.0.0.0\"] - server address\n* @param {boolean} [options.open=false] - boolean indicating whether to launch a web browser\n* @param {Callback} [clbk] - callback to invoke upon creating a server\n* @throws {TypeError} must provide valid options\n* @throws {Error} error encountered when starting server\n*\n* @example\n* var opts = {\n*     'html': '<h1>Beep</h1>'\n* };\n*\n* httpServer( opts, onReady );\n*\n* function onReady( error, server ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     server.close();\n* }\n*/\nfunction httpServer( options ) {\n\tvar connections;\n\tvar isClosing;\n\tvar server;\n\tvar sopts;\n\tvar fpath;\n\tvar clbk;\n\tvar boot;\n\tvar opts;\n\tvar err;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\tclbk = arguments[ 1 ];\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Callback argument must be a function. Value: `%s`.', clbk ) );\n\t\t}\n\t} else {\n\t\tclbk = noop;\n\t}\n\terr = validate( opts, options );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\t// If provided HTML and/or JavaScript as `strings`, convert to `buffers`...\n\tif ( opts.html && isString( opts.html ) ) {\n\t\topts.html = string2buffer( opts.html );\n\t}\n\tif ( opts.javascript && isString( opts.javascript ) ) {\n\t\topts.javascript = string2buffer( opts.javascript );\n\t}\n\t// Extract server options:\n\tsopts = serverOpts( options );\n\n\tdebug( 'Serving provided content.' );\n\tif ( !opts.html ) {\n\t\tdebug( 'No HTML content provided.' );\n\t\tdebug( 'Loading a boilerplate HTML page...' );\n\t\tfpath = resolve( __dirname, 'static/index.html' );\n\t\topts.html = readFileSync( fpath );\n\t}\n\t// Create a function to boot a server...\n\tboot = createServer( sopts, requestListener );\n\n\tdebug( 'Starting server...' );\n\tboot( onServer );\n\n\t// Initialize a connections store:\n\tconnections = createStore();\n\n\t/**\n\t* Callback invoked upon creating a server.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {Server} _server - server instance\n\t* @throws {Error} error encountered when starting server\n\t*/\n\tfunction onServer( error, _server ) {\n\t\tvar addr;\n\t\tif ( error ) {\n\t\t\tthrow error;\n\t\t}\n\t\tdebug( 'Server started.' );\n\t\tserver = _server;\n\n\t\t// Track connections so that we can perform clean-up upon closing the server of any persistent TCP connections which are still hanging around:\n\t\tserver.on( 'connection', onConnection );\n\n\t\tserver.once( 'close', onClose );\n\t\tif ( opts.open ) {\n\t\t\taddr = server.address();\n\t\t\topenURL( 'http://'+addr.address+':'+addr.port );\n\t\t}\n\t\tclbk( null, server );\n\t}\n\n\t/**\n\t* Callback invoked upon receiving a socket connection.\n\t*\n\t* @private\n\t* @param {Socket} socket - socket connection\n\t*/\n\tfunction onConnection( socket ) {\n\t\tvar key = socket.remoteAddress + ':' + socket.remotePort;\n\n\t\tdebug( 'Received a socket connection: %s.', key );\n\t\tconnections[ key ] = socket;\n\t\tsocket.on( 'close', onClose );\n\n\t\t/**\n\t\t* Callback invoked once a socket connection closes.\n\t\t*\n\t\t* @private\n\t\t*/\n\t\tfunction onClose() {\n\t\t\tdebug( 'Socket connection closed: %s.', key );\n\t\t\tdelete connections[ key ];\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked upon receiving an HTTP request for provided content.\n\t*\n\t* @private\n\t* @param {IncomingMessage} request - HTTP request object\n\t* @param {ServerResponse} response - HTTP response object\n\t* @returns {void}\n\t*/\n\tfunction requestListener( request, response ) {\n\t\tdebug( 'Received a request for %s', request.url );\n\n\t\tif ( isClosing ) {\n\t\t\treturn unavailable( request, response );\n\t\t}\n\t\tif ( request.url === '/bundle.js' ) {\n\t\t\tnextTick( onTick( sendJavaScript ) );\n\t\t\treturn response.once( 'finish', onFinish );\n\t\t}\n\t\tif ( request.url !== '/' && request.url !== '/index.html' ) {\n\t\t\treturn notFound( request, response );\n\t\t}\n\t\tnextTick( onTick( sendHTML ) );\n\t\tif ( !opts.javascript ) {\n\t\t\tresponse.once( 'finish', onFinish );\n\t\t}\n\n\t\t/**\n\t\t* Returns a callback to return a response on the next tick. Note that this is a workaround for a race condition bug in Node v0.10 (see [nodejs/node#1309][1]).\n\t\t*\n\t\t* [1]: https://github.com/nodejs/node/issues/1309\n\t\t*\n\t\t* @private\n\t\t* @param {Function} fcn - response function\n\t\t* @returns {Callback} callback to invoke on next tick\n\t\t*/\n\t\tfunction onTick( fcn ) {\n\t\t\treturn next;\n\n\t\t\t/**\n\t\t\t* Callback to return on a response.\n\t\t\t*\n\t\t\t* @private\n\t\t\t*/\n\t\t\tfunction next() {\n\t\t\t\tfcn( request, response );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Sends HTML content in response to a client request.\n\t*\n\t* @private\n\t* @param {IncomingMessage} request - HTTP request object\n\t* @param {ServerResponse} response - HTTP response object\n\t*/\n\tfunction sendHTML( request, response ) {\n\t\tdebug( 'Sending HTML...' );\n\t\tresponse.statusCode = 200;\n\t\tresponse.setHeader( 'Content-Type', 'text/html' );\n\t\tresponse.setHeader( 'Content-Length', byteLength( opts.html ) );\n\t\tresponse.end( opts.html );\n\t}\n\n\t/**\n\t* Sends JavaScript content in response to a client request.\n\t*\n\t* @private\n\t* @param {IncomingMessage} request - HTTP request object\n\t* @param {ServerResponse} response - HTTP response object\n\t*/\n\tfunction sendJavaScript( request, response ) {\n\t\tdebug( 'Sending JavaScript...' );\n\t\tresponse.statusCode = 200;\n\t\tresponse.setHeader( 'Content-Type', 'text/javascript' );\n\t\tresponse.setHeader( 'Content-Length', byteLength( opts.javascript ) );\n\t\tresponse.end( opts.javascript );\n\t}\n\n\t/**\n\t* Callback invoked once the server should close.\n\t*\n\t* @private\n\t*/\n\tfunction onFinish() {\n\t\tdebug( 'Finished serving content.' );\n\t\tisClosing = true;\n\n\t\tdebug( 'Closing the server...' );\n\t\tserver.close();\n\n\t\tsetTimeout( destroyConnections, 5000 );\n\t}\n\n\t/**\n\t* Destroys all connections.\n\t*\n\t* @private\n\t*/\n\tfunction destroyConnections() {\n\t\tvar keys;\n\t\tvar i;\n\n\t\tdebug( 'Destroying all connections...' );\n\t\tkeys = objectKeys( connections );\n\t\tfor ( i = 0; i < keys.length; i++ ) {\n\t\t\tdebug( 'Destroying connection %s...', keys[i] );\n\t\t\tconnections[ keys[i] ].destroy();\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = httpServer;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a disposable HTTP server.\n*\n* @module @stdlib/net-disposable-http-server\n*\n* @example\n* var httpServer = require( '@stdlib/net-disposable-http-server' );\n*\n* var opts = {\n*     'html': '<h1>Beep</h1>'\n* };\n*\n* httpServer( opts, onReady );\n*\n* function onReady( error, server ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     server.close();\n* }\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "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",
  "names": ["require_validate", "__commonJSMin", "exports", "module", "isBuffer", "isBoolean", "isString", "isObject", "hasOwnProp", "format", "validate", "opts", "options", "require_opts", "__commonJSMin", "exports", "module", "hasOwnProp", "opts", "options", "out", "require_connections_store", "__commonJSMin", "exports", "module", "create", "require_main", "__commonJSMin", "exports", "module", "resolve", "logger", "objectKeys", "createServer", "readFileSync", "isString", "isFunction", "openURL", "noop", "buffer2bytelength", "string2buffer", "nextTick", "NODE_VERSION", "format", "validate", "serverOpts", "createStore", "debug", "SUPPORTS_BUFFER", "notFound", "request", "response", "unavailable", "onClose", "byteLength", "str", "httpServer", "options", "connections", "isClosing", "server", "sopts", "fpath", "clbk", "boot", "opts", "err", "requestListener", "onServer", "error", "_server", "addr", "onConnection", "socket", "key", "onTick", "sendJavaScript", "onFinish", "sendHTML", "fcn", "next", "destroyConnections", "keys", "i", "main"]
}
