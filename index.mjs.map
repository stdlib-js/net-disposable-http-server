{"version":3,"file":"index.mjs","sources":["../e7bfd59b4fd6f5dc4b1598c98d26cd","../lib/validate.js","../lib/opts.js","../lib/connections_store.js","../lib/server.js","../lib/index.js"],"sourcesContent":["export default '/home/runner/work/net-disposable-http-server/net-disposable-http-server/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isBuffer = require( '@stdlib/assert-is-buffer' );\nvar isBoolean = require( '@stdlib/assert-is-boolean' ).isPrimitive;\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar isObject = require( '@stdlib/assert-is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {(Buffer|string)} [options.html] - HTML content to serve\n* @param {(Buffer|string)} [options.javascript] - JavaScript script to serve\n* @param {boolean} [options.open] - indicates whether to launch a web browser\n* @returns {Error|null} error or null\n*\n* @example\n* var options = {\n*     'port': 7331,\n*     'address': '127.0.0.1',\n*     'open': false\n* };\n* var opts = {};\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( 'invalid argument. Options argument must be an object. Value: `' + options + '`.' );\n\t}\n\tif ( hasOwnProp( options, 'html' ) ) {\n\t\topts.html = options.html;\n\t\tif ( !isBuffer( opts.html ) && !isString( opts.html ) ) {\n\t\t\treturn new TypeError( 'invalid option. `html` option must be either a `buffer` or a primitive string. Option: `' + opts.html + '`.' );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'javascript' ) ) {\n\t\topts.javascript = options.javascript;\n\t\tif ( !isBuffer( opts.javascript ) && !isString( opts.javascript ) ) {\n\t\t\treturn new TypeError( 'invalid option. `javascript` option must be either a `buffer` or a primitive string. Option: `' + opts.javascript + '`.' );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'open' ) ) {\n\t\topts.open = options.open;\n\t\tif ( !isBoolean( opts.open ) ) {\n\t\t\treturn new TypeError( 'invalid option. `open` option must be a primitive boolean. Option: `' + opts.open + '`.' );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\n\n\n// MAIN //\n\n/**\n* Extracts HTTP server options from input function options.\n*\n* @private\n* @param {Options} options - function options\n* @param {NonNegativeInteger} [options.port] - server port\n* @param {NonNegativeInteger} [options.maxport] - max server port\n* @param {string} [options.hostname] - server hostname\n* @param {string} [options.address] - server address\n* @returns {Options} server options\n*\n* @example\n* var options = {\n*     'html': '<h1>beep</h1>',\n*     'open': true,\n*     'port': 7331,\n*     'address': '127.0.0.1'\n* };\n* var out = opts( options );\n* // returns {'port': 7331, 'address': '127.0.0.1'}\n*/\nfunction opts( options ) {\n\tvar out = {};\n\tif ( hasOwnProp( options, 'port' ) ) {\n\t\tout.port = options.port;\n\t}\n\tif ( hasOwnProp( options, 'maxport' ) ) {\n\t\tout.maxport = options.maxport;\n\t}\n\tif ( hasOwnProp( options, 'hostname' ) ) {\n\t\tout.hostname = options.hostname;\n\t}\n\tif ( hasOwnProp( options, 'address' ) ) {\n\t\tout.address = options.address;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = opts;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns a new connections store.\n*\n* @private\n* @returns {Object} store\n*/\nfunction create() {\n\treturn {};\n}\n\n\n// EXPORTS //\n\nmodule.exports = create;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar path = require( 'path' );\nvar logger = require( 'debug' );\nvar objectKeys = require( '@stdlib/utils-keys' );\nvar createServer = require( '@stdlib/net-http-server' );\nvar readFileSync = require( '@stdlib/fs-read-file' ).sync;\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar isFunction = require( '@stdlib/assert-is-function' );\nvar openURL = require( '@stdlib/utils-open-url' );\nvar noop = require( '@stdlib/utils-noop' );\nvar Buffer = require( '@stdlib/buffer-ctor' );\nvar string2buffer = require( '@stdlib/buffer-from-string' );\nvar nextTick = require( '@stdlib/utils-next-tick' );\nvar validate = require( './validate.js' );\nvar serverOpts = require( './opts.js' );\nvar createStore = require( './connections_store.js' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'disposable-http-server' );\n\n\n// MAIN //\n\n/**\n* Creates a disposable HTTP server.\n*\n* @param {Options} options - server options\n* @param {(Buffer|string)} [options.html] - HTML content to serve\n* @param {(Buffer|string)} [options.javascript] - JavaScript to serve\n* @param {NonNegativeInteger} [options.port=0] - server port\n* @param {NonNegativeInteger} [options.maxport] - max server port\n* @param {string} [options.hostname] - server hostname\n* @param {string} [options.address=\"0.0.0.0\"] - server address\n* @param {boolean} [options.open=false] - boolean indicating whether to launch a web browser\n* @param {Callback} [clbk] - callback to invoke upon creating a server\n* @throws {TypeError} must provide valid options\n* @throws {Error} error encountered when starting server\n*\n* @example\n* var opts = {\n*     'html': '<h1>Beep</h1>'\n* };\n*\n* httpServer( opts, onReady );\n*\n* function onReady( error, server ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     server.close();\n* }\n*/\nfunction httpServer( options ) {\n\tvar connections;\n\tvar isClosing;\n\tvar server;\n\tvar sopts;\n\tvar fpath;\n\tvar clbk;\n\tvar boot;\n\tvar opts;\n\tvar err;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\tclbk = arguments[ 1 ];\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. Callback argument must be a function. Value: `' + clbk + '`.' );\n\t\t}\n\t} else {\n\t\tclbk = noop;\n\t}\n\terr = validate( opts, options );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\t// If provided HTML and/or JavaScript as `strings`, convert to `buffers`...\n\tif ( opts.html && isString( opts.html ) ) {\n\t\topts.html = string2buffer( opts.html );\n\t}\n\tif ( opts.javascript && isString( opts.javascript ) ) {\n\t\topts.javascript = string2buffer( opts.javascript );\n\t}\n\t// Extract server options:\n\tsopts = serverOpts( options );\n\n\tdebug( 'Serving provided content.' );\n\tif ( !opts.html ) {\n\t\tdebug( 'No HTML content provided.' );\n\t\tdebug( 'Loading a boilerplate HTML page...' );\n\t\tfpath = path.resolve( __dirname, '../static/index.html' );\n\t\topts.html = readFileSync( fpath );\n\t}\n\t// Create a function to boot a server...\n\tboot = createServer( sopts, requestListener );\n\n\tdebug( 'Starting server...' );\n\tboot( onServer );\n\n\t// Initialize a connections store:\n\tconnections = createStore();\n\n\t/**\n\t* Callback invoked upon creating a server.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {Server} _server - server instance\n\t* @throws {Error} error encountered when starting server\n\t*/\n\tfunction onServer( error, _server ) {\n\t\tvar addr;\n\t\tif ( error ) {\n\t\t\tthrow error;\n\t\t}\n\t\tdebug( 'Server started.' );\n\t\tserver = _server;\n\t\tserver.on( 'connection', onConnection );\n\t\tserver.once( 'close', onClose );\n\t\tif ( opts.open ) {\n\t\t\taddr = server.address();\n\t\t\topenURL( 'http://'+addr.address+':'+addr.port );\n\t\t}\n\t\tclbk( null, server );\n\t}\n\n\t/**\n\t* Callback invoked upon receiving a socket connection.\n\t*\n\t* @private\n\t* @param {Socket} socket - socket connection\n\t*/\n\tfunction onConnection( socket ) {\n\t\tvar key = socket.remoteAddress + ':' + socket.remotePort;\n\n\t\tdebug( 'Received a socket connection: %s.', key );\n\t\tconnections[ key ] = socket;\n\t\tsocket.on( 'close', onClose );\n\n\t\t/**\n\t\t* Callback invoked once a socket connection closes.\n\t\t*\n\t\t* @private\n\t\t*/\n\t\tfunction onClose() {\n\t\t\tdebug( 'Socket connection closed: %s.', key );\n\t\t\tdelete connections[ key ];\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked upon receiving an HTTP request for provided content.\n\t*\n\t* @private\n\t* @param {IncomingMessage} request - HTTP request object\n\t* @param {ServerResponse} response - HTTP response object\n\t* @returns {void}\n\t*/\n\tfunction requestListener( request, response ) {\n\t\tdebug( 'Received a request for %s', request.url );\n\n\t\tif ( isClosing ) {\n\t\t\treturn unavailable( request, response );\n\t\t}\n\t\tif ( request.url === '/bundle.js' ) {\n\t\t\tnextTick( onTick( sendJavaScript ) );\n\t\t\treturn response.once( 'finish', onFinish );\n\t\t}\n\t\tif ( request.url !== '/' && request.url !== '/index.html' ) {\n\t\t\treturn notFound( request, response );\n\t\t}\n\t\tnextTick( onTick( sendHTML ) );\n\t\tif ( !opts.javascript ) {\n\t\t\tresponse.once( 'finish', onFinish );\n\t\t}\n\n\t\t/**\n\t\t* Returns a callback to return a response on the next tick. Note that this is a workaround for a race condition bug in Node v0.10 (see [nodejs/node#1309][1]).\n\t\t*\n\t\t* [1]: https://github.com/nodejs/node/issues/1309\n\t\t*\n\t\t* @private\n\t\t* @param {Function} fcn - response function\n\t\t* @returns {Callback} callback to invoke on next tick\n\t\t*/\n\t\tfunction onTick( fcn ) {\n\t\t\treturn next;\n\n\t\t\t/**\n\t\t\t* Callback to return on a response.\n\t\t\t*\n\t\t\t* @private\n\t\t\t*/\n\t\t\tfunction next() {\n\t\t\t\tfcn( request, response );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Sends a 404 response.\n\t*\n\t* @private\n\t* @param {IncomingMessage} request - HTTP request object\n\t* @param {ServerResponse} response - HTTP response object\n\t*/\n\tfunction notFound( request, response ) {\n\t\tdebug( 'Sending 404 response...' );\n\t\tresponse.statusCode = 404;\n\t\tresponse.end();\n\t}\n\n\t/**\n\t* Sends a 503 response.\n\t*\n\t* @private\n\t* @param {IncomingMessage} request - HTTP request object\n\t* @param {ServerResponse} response - HTTP response object\n\t*/\n\tfunction unavailable( request, response ) {\n\t\tdebug( 'Sending 503 response...' );\n\t\tresponse.statusCode = 503;\n\t\tresponse.end();\n\t}\n\n\t/**\n\t* Sends HTML content in response to a client request.\n\t*\n\t* @private\n\t* @param {IncomingMessage} request - HTTP request object\n\t* @param {ServerResponse} response - HTTP response object\n\t*/\n\tfunction sendHTML( request, response ) {\n\t\tdebug( 'Sending HTML...' );\n\t\tresponse.statusCode = 200;\n\t\tresponse.setHeader( 'Content-Type', 'text/html' );\n\n\t\t// TODO: we have to convert to a `string` because Node v0.10 requires a `string`. Subsequent versions support providing a `Buffer` object. Ideally, we would sniff `Buffer` support and only convert to a `string` if necessary.\n\t\tresponse.setHeader( 'Content-Length', Buffer.byteLength( opts.html.toString() ) );\n\t\tresponse.end( opts.html );\n\t}\n\n\t/**\n\t* Sends JavaScript content in response to a client request.\n\t*\n\t* @private\n\t* @param {IncomingMessage} request - HTTP request object\n\t* @param {ServerResponse} response - HTTP response object\n\t*/\n\tfunction sendJavaScript( request, response ) {\n\t\tdebug( 'Sending JavaScript...' );\n\t\tresponse.statusCode = 200;\n\t\tresponse.setHeader( 'Content-Type', 'text/javascript' );\n\n\t\t// TODO: we have to convert to a `string` because Node v0.10 requires a `string`. Subsequent versions support providing a `Buffer` object. Ideally, we would sniff `Buffer` support and only convert to a `string` if necessary.\n\t\tresponse.setHeader( 'Content-Length', Buffer.byteLength( opts.javascript.toString() ) );\n\t\tresponse.end( opts.javascript );\n\t}\n\n\t/**\n\t* Callback invoked once the server should close.\n\t*\n\t* @private\n\t*/\n\tfunction onFinish() {\n\t\tdebug( 'Finished serving content.' );\n\t\tisClosing = true;\n\n\t\tdebug( 'Closing the server...' );\n\t\tserver.close();\n\n\t\tsetTimeout( destroyConnections, 5000 );\n\t}\n\n\t/**\n\t* Destroys all connections.\n\t*\n\t* @private\n\t*/\n\tfunction destroyConnections() {\n\t\tvar keys;\n\t\tvar i;\n\n\t\tdebug( 'Destroying all connections...' );\n\t\tkeys = objectKeys( connections );\n\t\tfor ( i = 0; i < keys.length; i++ ) {\n\t\t\tdebug( 'Destroying connection %s...', keys[i] );\n\t\t\tconnections[ keys[i] ].destroy();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once a server closes.\n\t*\n\t* @private\n\t*/\n\tfunction onClose() {\n\t\tdebug( 'Server closed.' );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = httpServer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a disposable HTTP server.\n*\n* @module @stdlib/net-disposable-http-server\n*\n* @example\n* var httpServer = require( '@stdlib/net-disposable-http-server' );\n*\n* var opts = {\n*     'html': '<h1>Beep</h1>'\n* };\n*\n* httpServer( opts, onReady );\n*\n* function onReady( error, server ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     server.close();\n* }\n*/\n\n// MODULES //\n\nvar httpServer = require( './server.js' );\n\n\n// EXPORTS //\n\nmodule.exports = httpServer;\n"],"names":["isBuffer","require$$0","isBoolean","require$$1","isPrimitive","isString","require$$2","isObject","require$$3","hasOwnProp","require$$4","validate_1","opts","options","html","javascript","open","TypeError","opts_1","out","port","maxport","hostname","address","connections_store","path","logger","objectKeys","createServer","readFileSync","sync","require$$5","isFunction","require$$6","openURL","require$$7","noop","require$$8","Buffer","require$$9","string2buffer","require$$10","nextTick","require$$11","validate","require$$12","serverOpts","require$$13","createStore","require$$14","debug","server","connections","isClosing","sopts","fpath","clbk","boot","err","arguments","length","onServer","error","_server","addr","on","onConnection","once","onClose","socket","key","remoteAddress","remotePort","requestListener","request","response","url","unavailable","onTick","sendJavaScript","onFinish","notFound","fcn","sendHTML","statusCode","end","setHeader","byteLength","toString","close","setTimeout","destroyConnections","keys","i","destroy","resolve","__dirname","lib"],"mappings":"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"}